"""create all tables with use_alter

Revision ID: dee743e41fcb
Revises: 
Create Date: 2025-03-23 04:04:13.909580

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dee743e41fcb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Dim_Vehicle',
    sa.Column('vehicle_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('prod_date', sa.Date(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('propulsion', sa.Enum('eletric', 'hybrid', 'gas', name='propulsiontype'), nullable=False),
    sa.PrimaryKeyConstraint('vehicle_id')
    )
    op.create_table('Dim_locations',
    sa.Column('location_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('market', sa.String(length=50), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('province', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('cpf', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('Dim_Suplier',
    sa.Column('suplier_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('suplier_name', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['Dim_locations.location_id'], ),
    sa.PrimaryKeyConstraint('suplier_id')
    )
    op.create_table('Dim_Parts',
    sa.Column('part_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('part_name', sa.String(length=255), nullable=False),
    sa.Column('last_id_purchase', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['last_id_purchase'], ['Dim_purchances.purchance_id'], name='fk_parts_purchance', ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['Dim_Suplier.suplier_id'], ),
    sa.PrimaryKeyConstraint('part_id')
    )
    op.create_table('Dim_purchances',
    sa.Column('purchance_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purchance_type', sa.Enum('bulk', 'warranty', name='purchancetype'), nullable=False),
    sa.Column('purchance_date', sa.Date(), nullable=False),
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['Dim_Parts.part_id'], ),
    sa.PrimaryKeyConstraint('purchance_id')
    )
    op.create_table('Fact_Warranties',
    sa.Column('claim_key', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('repair_date', sa.Date(), nullable=False),
    sa.Column('client_comment', sa.String(length=65535), nullable=True),
    sa.Column('tech_comment', sa.String(length=65535), nullable=False),
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.Column('classifed_failured', sa.String(length=50), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('purchance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['Dim_locations.location_id'], ),
    sa.ForeignKeyConstraint(['part_id'], ['Dim_Parts.part_id'], ),
    sa.ForeignKeyConstraint(['purchance_id'], ['Dim_purchances.purchance_id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['Dim_Vehicle.vehicle_id'], ),
    sa.PrimaryKeyConstraint('claim_key'),
    sa.UniqueConstraint('vehicle_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Fact_Warranties')
    op.drop_table('Dim_purchances')
    op.drop_table('Dim_Parts')
    op.drop_table('Dim_Suplier')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))

    op.drop_table('users')
    op.drop_table('Dim_locations')
    op.drop_table('Dim_Vehicle')
    # ### end Alembic commands ###
